name: Build Wheels
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.gitignore'
      - '.npmignore'
      - '.pre-commit-config.yaml'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
      - 'README.md'
      - 'install_nodejs.sh'
      - 'example/*'
      - '.github/*'
  workflow_dispatch:

jobs:
  pytg-build:
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]
        architecture: [ 'x64', 'arm64' ]
    runs-on: ubuntu-latest
    steps:
      - name: Get Branch Name
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: github_info

      - name: Checkout ${{ steps.github_info.outputs.branch }}
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.github_info.outputs.branch }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Setup Python${{ matrix.python-version }} for ${{ matrix.architecture }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install pip requirements
        run: |
          python -m pip install wheel setuptools

      - name: Build wheel for Python${{ matrix.python-version }} and ${{ matrix.architecture }}
        run: |
          python setup.py sdist bdist_wheel

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: hikkalls-python${{ matrix.python-version }}-${{ matrix.architecture }}
          path: dist/*.whl

  build-n-publish:
    name: Build and publish to PyPI
    runs-on: ubuntu-latest
    needs: [pytg-build]
    steps:
      - name: Install Python3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install pip requirements
        run: |
          python -m pip install twine

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: tmp/

      - name: Extract artifacts
        run: |
          mkdir dist
          mv tmp/*/*.whl dist/

      - name: Push to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          python -m twine check dist/*
          python -m twine upload dist/*
